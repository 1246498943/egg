
set(NIUBI_SETUP_TARGET_NAME testScript)

include_directories(${CMAKE_SOURCE_DIR}/include)

SET(NIUBI_SETUP_HEADERS
	# testBaseClass.h
	# testObjectHandle.h
)

SET(NIUBI_SETUP_SOURCES
    main.cpp
    )

#add_definitions(-DENABLE_FBX)
#add_definitions(-DBOOST_ALL_NO_LIB)

NIUBI_SETUP_EXECUTABLE(ON)
target_link_libraries(${NIUBI_SETUP_TARGET_NAME} 
	egg
	#Runtime
	# optimized ${Boost_FILESYSTEM_LIBRARY_RELEASE}  debug ${Boost_FILESYSTEM_LIBRARY_DEBUG}
	# optimized ${Boost_SYSTEM_LIBRARY_RELEASE}  debug ${Boost_SYSTEM_LIBRARY_DEBUG}
    # optimized ${Boost_REGEX_LIBRARY_RELEASE}  debug ${Boost_REGEX_LIBRARY_DEBUG}

    )

IF(WIN32)
   IF(BUILD_WINDOWS_SYSTEM) 
       set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_DEBUG "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
       set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
       set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_RELWITHDEBINFO "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
       set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_MINSIZEREL "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
       # pragma comment(linker, "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
   else(BUILD_WINDOWS_SYSTEM) 
        set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_DEBUG "/SUBSYSTEM:CONSOLE")
        set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:CONSOLE")
        set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_RELWITHDEBINFO "/SUBSYSTEM:CONSOLE")
        set_target_properties(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS_MINSIZEREL "/SUBSYSTEM:CONSOLE")
       # pragma comment(linker, "/SUBSYSTEM:CONSOLE")
   endif(BUILD_WINDOWS_SYSTEM) 
endif(WIN32)

# SET_TARGET_PROPERTIES(${NIUBI_SETUP_TARGET_NAME} PROPERTIES LINK_FLAGS "/FORCE:MULTIPLE")
NIUBI_SETUP_INSTALL()
NIUBI_SETUP_INSTALL_INCLUDE()
NIUBI_SETUP_DOCUMENT()
